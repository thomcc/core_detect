name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-latest }
          - { rust: 1.32.0, os: ubuntu-latest }
          - { rust: beta, os: ubuntu-latest }
          - { rust: nightly, os: ubuntu-latest }
          - { rust: stable, os: macos-latest }
          - { rust: nightly, os: macos-latest }

          - { rust: stable, os: windows-latest }
          - { rust: nightly, os: windows-latest }
          - { rust: stable-x86_64-gnu, os: windows-latest }
          - { rust: stable-i686-msvc, os: windows-latest }
          - { rust: stable-i686-gnu, os: windows-latest }
          - { rust: nightly-i686-msvc, os: windows-latest }
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - run: cargo test --verbose
      - run: cargo test --verbose --no-default-features
        env:
          RUSTFLAGS: --cfg allow_false_negative
      - run: cargo test --verbose --all-features
        if: ${{ matrix.rust == 'nightly' || matrix.rust == 'nightly-i686-msvc' }}

  cross-test:
    name: Test on ${{ matrix.target }} (using cross)
    runs-on: ubuntu-latest
    env:
      RUSTUP_TOOLCHAIN: nightly
    strategy:
      fail-fast: false
      matrix:
        target:
          # 32-bit x86s
          - i686-unknown-linux-gnu
          - i586-unknown-linux-gnu
          # essentially just to make sure these compile
          - armv7-linux-androideabi
          - aarch64-linux-android
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
      - run: cargo install cross
      - run: cross test --verbose --target=${{ matrix.target }}
      - run: cross test --verbose --target=${{ matrix.target }} --all-features
      - run: cross clean
      - run: cross test --verbose --target=${{ matrix.target }} --no-default-features
        env:
          RUSTFLAGS: --cfg allow_false_negative

  check:
    name: Lint with cargo check
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
      - run: cargo check --workspace --all-targets --verbose
      - run: cargo check --workspace --all-targets --verbose --no-default-features
      - run: cargo check --workspace --all-targets --verbose --all-features

  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  check-rustdoc-links:
    name: Check intra-doc links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
      - run: cargo rustdoc --all-features -- -D warnings
